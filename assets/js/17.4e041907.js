(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{664:function(s,a,t){"use strict";t.r(a);var e=t(3),r=Object(e.a)({},(function(){var s=this,a=s._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"二-语句"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#二-语句"}},[s._v("#")]),s._v(" 二.语句")]),s._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[s._v("前言")]),s._v(" "),a("p",[s._v("语句是指要执行的一些操作和产生副作用的表达式：由"),a("code",[s._v("关键字")]),s._v("和"),a("code",[s._v("标识符")]),s._v("及"),a("code",[s._v("操作符")]),s._v("组成的表达式组成，通过不同的"),a("code",[s._v("关键字")]),s._v("可以分为几类")])]),s._v(" "),a("h2",{attrs:{id:"_1-声明语句"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-声明语句"}},[s._v("#")]),s._v(" 1.声明语句")]),s._v(" "),a("p",[s._v("用于声明各种语言项，包括声明变量，静态变量，常量，结构体，函数等，以及通过 extern 和 use 关键字引入包和模块等")]),s._v(" "),a("h3",{attrs:{id:"_1-1-const"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-const"}},[s._v("#")]),s._v(" 1.1 const")]),s._v(" "),a("ul",[a("li",[s._v("关键字"),a("code",[s._v("const")]),s._v("用于声明"),a("code",[s._v("常量")])])]),s._v(" "),a("div",{staticClass:"language-rust line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-rust"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("i32")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("123")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("h3",{attrs:{id:"_1-1-let"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-let"}},[s._v("#")]),s._v(" 1.1 let")]),s._v(" "),a("p",[s._v("变量有两部分组成：值 、 类型")]),s._v(" "),a("p",[s._v("值可以分为：不可变变量、可变变量")]),s._v(" "),a("p",[s._v("类型可以分为不同的"),a("a",{attrs:{href:"/1.base/1.js/4.variableobj"}},[s._v("数据类型")])]),s._v(" "),a("ul",[a("li",[s._v("关键字"),a("code",[s._v("let")]),s._v("用于声明"),a("code",[s._v("不可变变量")])])]),s._v(" "),a("div",{staticClass:"language-rust line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-rust"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("123")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("ul",[a("li",[s._v("关键字"),a("code",[s._v("mut")]),s._v("用于声明"),a("code",[s._v("可变变量")])])]),s._v(" "),a("div",{staticClass:"language-rust line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-rust"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("mut")]),s._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("123")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\na "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("456")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("h3",{attrs:{id:"_1-2-function"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-function"}},[s._v("#")]),s._v(" 1.2 function")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("fn")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[a("a",{attrs:{href:"/1.base/1.js/6.closure"}},[s._v("函数")])]),s._v(" "),a("h3",{attrs:{id:"_1-3-require"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-require"}},[s._v("#")]),s._v(" 1.3 require")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("require")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"./a.js"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[a("a",{attrs:{href:"/1.base/1.js/8.async"}},[s._v("模块化")])]),s._v(" "),a("h2",{attrs:{id:"_2-表达式语句"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-表达式语句"}},[s._v("#")]),s._v(" 2.表达式语句")]),s._v(" "),a("p",[s._v("表达式主要用于计算求值")]),s._v(" "),a("p",[s._v("Rust 编译器在解析代码时：")]),s._v(" "),a("ul",[a("li",[s._v("如果遇到分号，就会继续往后面执行")]),s._v(" "),a("li",[s._v("如果遇到语句，就会执行语句")]),s._v(" "),a("li",[s._v("如果遇到表达式，就会对表达式求值")]),s._v(" "),a("li",[s._v("如果分号后面什么都没有，就会补上单元值()")]),s._v(" "),a("li",[s._v("当遇到函数时，就会将函数体的花括号识别为块表达式")])]),s._v(" "),a("h3",{attrs:{id:"_2-1-块表达式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-块表达式"}},[s._v("#")]),s._v(" 2.1 块表达式")]),s._v(" "),a("p",[s._v("块表达式是由一对花括号和一系列表达式组成的，它总是返回块中最后一个表达式的值")]),s._v(" "),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[s._v("var a "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\na "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" a + "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("h3",{attrs:{id:"_2-2-位置表达式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-位置表达式"}},[s._v("#")]),s._v(" 2.2 位置表达式")]),s._v(" "),a("p",[s._v("位置表达式(Place Expression)一般叫做左值，是表示内存位置的表达式，有以下几类：")]),s._v(" "),a("ul",[a("li",[s._v("本地变量")]),s._v(" "),a("li",[s._v("静态变量")]),s._v(" "),a("li",[s._v("解引用 (* express)")]),s._v(" "),a("li",[s._v("数组索引 (expr[expr])")]),s._v(" "),a("li",[s._v("字段引用 (expr.field)")]),s._v(" "),a("li",[s._v("位置表达式组合")])]),s._v(" "),a("p",[s._v("通过位置表达式可以对某个数据单元的内存进行读写。位置表达式可以用于赋值")]),s._v(" "),a("h3",{attrs:{id:"_2-3-值表达式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-值表达式"}},[s._v("#")]),s._v(" 2.3 值表达式")]),s._v(" "),a("p",[s._v("值表达式(Value Expression)一般叫做右值，值表达式引用了某个存储单元地址中的数据。它相当于数据，只能进行读操作。")]),s._v(" "),a("p",[s._v("从语义角度来说，位置表达式代表了持久性数据，值表达式代表了临时数据。位置表达式一般有持久的状态，值表达式要不是字面量，要不就是表达式求值过程中创建的临时值")]),s._v(" "),a("ul",[a("li",[s._v("流程控制表达式")])])])}),[],!1,null,null,null);a.default=r.exports}}]);